// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/types/type_oneof.proto

package pbtypes

import (
	_ "github.com/yu31/protoc-plugin-default/xgo/pb/pbdefault"
	pbexternal "github.com/yu31/protoc-plugin-default/xgo/tests/pb/pbexternal"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EnumOneOf1 used tests cases in this file.
type EnumOneOf1 int32

const (
	EnumOneOf1_Zero  EnumOneOf1 = 0
	EnumOneOf1_One   EnumOneOf1 = 2
	EnumOneOf1_Two   EnumOneOf1 = 3
	EnumOneOf1_Three EnumOneOf1 = 5
	EnumOneOf1_Four  EnumOneOf1 = 6
	EnumOneOf1_Five  EnumOneOf1 = 7
	EnumOneOf1_Six   EnumOneOf1 = 9
	EnumOneOf1_Seven EnumOneOf1 = 11
	EnumOneOf1_Eight EnumOneOf1 = 12
	EnumOneOf1_Nine  EnumOneOf1 = 15
	EnumOneOf1_Ten   EnumOneOf1 = 17
)

// Enum value maps for EnumOneOf1.
var (
	EnumOneOf1_name = map[int32]string{
		0:  "Zero",
		2:  "One",
		3:  "Two",
		5:  "Three",
		6:  "Four",
		7:  "Five",
		9:  "Six",
		11: "Seven",
		12: "Eight",
		15: "Nine",
		17: "Ten",
	}
	EnumOneOf1_value = map[string]int32{
		"Zero":  0,
		"One":   2,
		"Two":   3,
		"Three": 5,
		"Four":  6,
		"Five":  7,
		"Six":   9,
		"Seven": 11,
		"Eight": 12,
		"Nine":  15,
		"Ten":   17,
	}
)

func (x EnumOneOf1) Enum() *EnumOneOf1 {
	p := new(EnumOneOf1)
	*p = x
	return p
}

func (x EnumOneOf1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumOneOf1) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_proto_cases_types_type_oneof_proto_enumTypes[0].Descriptor()
}

func (EnumOneOf1) Type() protoreflect.EnumType {
	return &file_tests_proto_cases_types_type_oneof_proto_enumTypes[0]
}

func (x EnumOneOf1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumOneOf1.Descriptor instead.
func (EnumOneOf1) EnumDescriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP(), []int{0}
}

// MessageOneOf1 used tests cases in this file.
type MessageOneOf1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessageOneOf1) Reset() {
	*x = MessageOneOf1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOneOf1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOneOf1) ProtoMessage() {}

func (x *MessageOneOf1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOneOf1.ProtoReflect.Descriptor instead.
func (*MessageOneOf1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP(), []int{0}
}

func (x *MessageOneOf1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessageOneOf1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessageOneOf1) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

// Test case for field in `oneof` parts.
type TypeOneOf1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneType1:
	//	*TypeOneOf1_FString1
	//	*TypeOneOf1_FString2
	//	*TypeOneOf1_FString3
	//	*TypeOneOf1_FString4
	//	*TypeOneOf1_FString5
	//	*TypeOneOf1_FString6
	//	*TypeOneOf1_FString7
	//	*TypeOneOf1_FString8
	//	*TypeOneOf1_FString9
	//	*TypeOneOf1_FInt32
	//	*TypeOneOf1_FInt64
	//	*TypeOneOf1_FUint32
	//	*TypeOneOf1_FUint64
	//	*TypeOneOf1_FSint32
	//	*TypeOneOf1_FSint64
	//	*TypeOneOf1_FSfixed32
	//	*TypeOneOf1_FSfixed64
	//	*TypeOneOf1_FFixed32
	//	*TypeOneOf1_FFixed64
	//	*TypeOneOf1_FFloat
	//	*TypeOneOf1_FDouble
	//	*TypeOneOf1_FBool1
	//	*TypeOneOf1_FBool2
	//	*TypeOneOf1_FBytes1
	//	*TypeOneOf1_FBytes2
	//	*TypeOneOf1_FEnum1
	//	*TypeOneOf1_FEnum2
	//	*TypeOneOf1_FEnum3
	//	*TypeOneOf1_FEnum4
	//	*TypeOneOf1_FEnum5
	//	*TypeOneOf1_FEnum6
	//	*TypeOneOf1_FEnum7
	//	*TypeOneOf1_FDuration1
	//	*TypeOneOf1_FDuration2
	//	*TypeOneOf1_FTimestamp1
	//	*TypeOneOf1_FTimestamp2
	//	*TypeOneOf1_FMessage11
	//	*TypeOneOf1_FMessage12
	//	*TypeOneOf1_FMessage13
	//	*TypeOneOf1_FMessage14
	//	*TypeOneOf1_FMessage15
	//	*TypeOneOf1_FMessage16
	//	*TypeOneOf1_FMessage17
	//	*TypeOneOf1_FMessage18
	//	*TypeOneOf1_FMessage21
	//	*TypeOneOf1_FMessage22
	//	*TypeOneOf1_FMessage23
	//	*TypeOneOf1_FMessage24
	//	*TypeOneOf1_FMessage25
	//	*TypeOneOf1_FMessage26
	//	*TypeOneOf1_FMessage27
	//	*TypeOneOf1_FMessage28
	//	*TypeOneOf1_FAny1
	//	*TypeOneOf1_FAny2
	//	*TypeOneOf1_FAny3
	//	*TypeOneOf1_FAny4
	//	*TypeOneOf1_FAny5
	//	*TypeOneOf1_FAny6
	//	*TypeOneOf1_FAny7
	//	*TypeOneOf1_FAny8
	//	*TypeOneOf1_FAny9
	OneType1 isTypeOneOf1_OneType1 `protobuf_oneof:"OneType1"`
}

func (x *TypeOneOf1) Reset() {
	*x = TypeOneOf1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeOneOf1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeOneOf1) ProtoMessage() {}

func (x *TypeOneOf1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeOneOf1.ProtoReflect.Descriptor instead.
func (*TypeOneOf1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP(), []int{1}
}

func (m *TypeOneOf1) GetOneType1() isTypeOneOf1_OneType1 {
	if m != nil {
		return m.OneType1
	}
	return nil
}

func (x *TypeOneOf1) GetFString1() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString1); ok {
		return x.FString1
	}
	return ""
}

func (x *TypeOneOf1) GetFString2() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString2); ok {
		return x.FString2
	}
	return ""
}

func (x *TypeOneOf1) GetFString3() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString3); ok {
		return x.FString3
	}
	return ""
}

func (x *TypeOneOf1) GetFString4() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString4); ok {
		return x.FString4
	}
	return ""
}

func (x *TypeOneOf1) GetFString5() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString5); ok {
		return x.FString5
	}
	return ""
}

func (x *TypeOneOf1) GetFString6() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString6); ok {
		return x.FString6
	}
	return ""
}

func (x *TypeOneOf1) GetFString7() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString7); ok {
		return x.FString7
	}
	return ""
}

func (x *TypeOneOf1) GetFString8() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString8); ok {
		return x.FString8
	}
	return ""
}

func (x *TypeOneOf1) GetFString9() string {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FString9); ok {
		return x.FString9
	}
	return ""
}

func (x *TypeOneOf1) GetFInt32() int32 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FInt32); ok {
		return x.FInt32
	}
	return 0
}

func (x *TypeOneOf1) GetFInt64() int64 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FInt64); ok {
		return x.FInt64
	}
	return 0
}

func (x *TypeOneOf1) GetFUint32() uint32 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FUint32); ok {
		return x.FUint32
	}
	return 0
}

func (x *TypeOneOf1) GetFUint64() uint64 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FUint64); ok {
		return x.FUint64
	}
	return 0
}

func (x *TypeOneOf1) GetFSint32() int32 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FSint32); ok {
		return x.FSint32
	}
	return 0
}

func (x *TypeOneOf1) GetFSint64() int64 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FSint64); ok {
		return x.FSint64
	}
	return 0
}

func (x *TypeOneOf1) GetFSfixed32() int32 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FSfixed32); ok {
		return x.FSfixed32
	}
	return 0
}

func (x *TypeOneOf1) GetFSfixed64() int64 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FSfixed64); ok {
		return x.FSfixed64
	}
	return 0
}

func (x *TypeOneOf1) GetFFixed32() uint32 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FFixed32); ok {
		return x.FFixed32
	}
	return 0
}

func (x *TypeOneOf1) GetFFixed64() uint64 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FFixed64); ok {
		return x.FFixed64
	}
	return 0
}

func (x *TypeOneOf1) GetFFloat() float32 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FFloat); ok {
		return x.FFloat
	}
	return 0
}

func (x *TypeOneOf1) GetFDouble() float64 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FDouble); ok {
		return x.FDouble
	}
	return 0
}

func (x *TypeOneOf1) GetFBool1() bool {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FBool1); ok {
		return x.FBool1
	}
	return false
}

func (x *TypeOneOf1) GetFBool2() bool {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FBool2); ok {
		return x.FBool2
	}
	return false
}

func (x *TypeOneOf1) GetFBytes1() []byte {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FBytes1); ok {
		return x.FBytes1
	}
	return nil
}

func (x *TypeOneOf1) GetFBytes2() []byte {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FBytes2); ok {
		return x.FBytes2
	}
	return nil
}

func (x *TypeOneOf1) GetFEnum1() EnumOneOf1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum1); ok {
		return x.FEnum1
	}
	return EnumOneOf1_Zero
}

func (x *TypeOneOf1) GetFEnum2() EnumOneOf1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum2); ok {
		return x.FEnum2
	}
	return EnumOneOf1_Zero
}

func (x *TypeOneOf1) GetFEnum3() pbexternal.Month1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum3); ok {
		return x.FEnum3
	}
	return pbexternal.Month1(0)
}

func (x *TypeOneOf1) GetFEnum4() pbexternal.Month2 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum4); ok {
		return x.FEnum4
	}
	return pbexternal.Month2(0)
}

func (x *TypeOneOf1) GetFEnum5() pbexternal.EnumWeek1_Week {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum5); ok {
		return x.FEnum5
	}
	return pbexternal.EnumWeek1_Week(0)
}

func (x *TypeOneOf1) GetFEnum6() pbexternal.EnumWeek2_Embed1_Week {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum6); ok {
		return x.FEnum6
	}
	return pbexternal.EnumWeek2_Embed1_Week(0)
}

func (x *TypeOneOf1) GetFEnum7() EnumCommon1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FEnum7); ok {
		return x.FEnum7
	}
	return EnumCommon1_Zero
}

func (x *TypeOneOf1) GetFDuration1() *durationpb.Duration {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FDuration1); ok {
		return x.FDuration1
	}
	return nil
}

func (x *TypeOneOf1) GetFDuration2() *durationpb.Duration {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FDuration2); ok {
		return x.FDuration2
	}
	return nil
}

func (x *TypeOneOf1) GetFTimestamp1() *timestamppb.Timestamp {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FTimestamp1); ok {
		return x.FTimestamp1
	}
	return nil
}

func (x *TypeOneOf1) GetFTimestamp2() *timestamppb.Timestamp {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FTimestamp2); ok {
		return x.FTimestamp2
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage11() *MessageOneOf1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage11); ok {
		return x.FMessage11
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage12() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage12); ok {
		return x.FMessage12
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage13() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage13); ok {
		return x.FMessage13
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage14() *pbexternal.External1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage14); ok {
		return x.FMessage14
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage15() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage15); ok {
		return x.FMessage15
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage16() *MessageCommon1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage16); ok {
		return x.FMessage16
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage17() *MessageCommon1_Embed1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage17); ok {
		return x.FMessage17
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage18() *MessageCommon1_Embed1_Embed2 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage18); ok {
		return x.FMessage18
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage21() *MessageOneOf1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage21); ok {
		return x.FMessage21
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage22() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage22); ok {
		return x.FMessage22
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage23() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage23); ok {
		return x.FMessage23
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage24() *pbexternal.External1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage24); ok {
		return x.FMessage24
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage25() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage25); ok {
		return x.FMessage25
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage26() *MessageCommon1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage26); ok {
		return x.FMessage26
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage27() *MessageCommon1_Embed1 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage27); ok {
		return x.FMessage27
	}
	return nil
}

func (x *TypeOneOf1) GetFMessage28() *MessageCommon1_Embed1_Embed2 {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FMessage28); ok {
		return x.FMessage28
	}
	return nil
}

func (x *TypeOneOf1) GetFAny1() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny1); ok {
		return x.FAny1
	}
	return nil
}

func (x *TypeOneOf1) GetFAny2() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny2); ok {
		return x.FAny2
	}
	return nil
}

func (x *TypeOneOf1) GetFAny3() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny3); ok {
		return x.FAny3
	}
	return nil
}

func (x *TypeOneOf1) GetFAny4() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny4); ok {
		return x.FAny4
	}
	return nil
}

func (x *TypeOneOf1) GetFAny5() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny5); ok {
		return x.FAny5
	}
	return nil
}

func (x *TypeOneOf1) GetFAny6() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny6); ok {
		return x.FAny6
	}
	return nil
}

func (x *TypeOneOf1) GetFAny7() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny7); ok {
		return x.FAny7
	}
	return nil
}

func (x *TypeOneOf1) GetFAny8() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny8); ok {
		return x.FAny8
	}
	return nil
}

func (x *TypeOneOf1) GetFAny9() *anypb.Any {
	if x, ok := x.GetOneType1().(*TypeOneOf1_FAny9); ok {
		return x.FAny9
	}
	return nil
}

type isTypeOneOf1_OneType1 interface {
	isTypeOneOf1_OneType1()
}

type TypeOneOf1_FString1 struct {
	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3,oneof"`
}

type TypeOneOf1_FString2 struct {
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3,oneof"`
}

type TypeOneOf1_FString3 struct {
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3,oneof"`
}

type TypeOneOf1_FString4 struct {
	FString4 string `protobuf:"bytes,4,opt,name=f_string4,json=fString4,proto3,oneof"`
}

type TypeOneOf1_FString5 struct {
	FString5 string `protobuf:"bytes,5,opt,name=f_string5,json=fString5,proto3,oneof"`
}

type TypeOneOf1_FString6 struct {
	FString6 string `protobuf:"bytes,6,opt,name=f_string6,json=fString6,proto3,oneof"`
}

type TypeOneOf1_FString7 struct {
	FString7 string `protobuf:"bytes,7,opt,name=f_string7,json=fString7,proto3,oneof"`
}

type TypeOneOf1_FString8 struct {
	FString8 string `protobuf:"bytes,8,opt,name=f_string8,json=fString8,proto3,oneof"`
}

type TypeOneOf1_FString9 struct {
	FString9 string `protobuf:"bytes,9,opt,name=f_string9,json=fString9,proto3,oneof"`
}

type TypeOneOf1_FInt32 struct {
	FInt32 int32 `protobuf:"varint,11,opt,name=f_int32,json=fInt32,proto3,oneof"`
}

type TypeOneOf1_FInt64 struct {
	FInt64 int64 `protobuf:"varint,12,opt,name=f_int64,json=fInt64,proto3,oneof"`
}

type TypeOneOf1_FUint32 struct {
	FUint32 uint32 `protobuf:"varint,13,opt,name=f_uint32,json=fUint32,proto3,oneof"`
}

type TypeOneOf1_FUint64 struct {
	FUint64 uint64 `protobuf:"varint,14,opt,name=f_uint64,json=fUint64,proto3,oneof"`
}

type TypeOneOf1_FSint32 struct {
	FSint32 int32 `protobuf:"zigzag32,15,opt,name=f_sint32,json=fSint32,proto3,oneof"`
}

type TypeOneOf1_FSint64 struct {
	FSint64 int64 `protobuf:"zigzag64,16,opt,name=f_sint64,json=fSint64,proto3,oneof"`
}

type TypeOneOf1_FSfixed32 struct {
	FSfixed32 int32 `protobuf:"fixed32,17,opt,name=f_sfixed32,json=fSfixed32,proto3,oneof"`
}

type TypeOneOf1_FSfixed64 struct {
	FSfixed64 int64 `protobuf:"fixed64,18,opt,name=f_sfixed64,json=fSfixed64,proto3,oneof"`
}

type TypeOneOf1_FFixed32 struct {
	FFixed32 uint32 `protobuf:"fixed32,19,opt,name=f_fixed32,json=fFixed32,proto3,oneof"`
}

type TypeOneOf1_FFixed64 struct {
	FFixed64 uint64 `protobuf:"fixed64,20,opt,name=f_fixed64,json=fFixed64,proto3,oneof"`
}

type TypeOneOf1_FFloat struct {
	FFloat float32 `protobuf:"fixed32,21,opt,name=f_float,json=fFloat,proto3,oneof"`
}

type TypeOneOf1_FDouble struct {
	FDouble float64 `protobuf:"fixed64,22,opt,name=f_double,json=fDouble,proto3,oneof"`
}

type TypeOneOf1_FBool1 struct {
	FBool1 bool `protobuf:"varint,31,opt,name=f_bool1,json=fBool1,proto3,oneof"`
}

type TypeOneOf1_FBool2 struct {
	FBool2 bool `protobuf:"varint,32,opt,name=f_bool2,json=fBool2,proto3,oneof"`
}

type TypeOneOf1_FBytes1 struct {
	FBytes1 []byte `protobuf:"bytes,41,opt,name=f_bytes1,json=fBytes1,proto3,oneof"`
}

type TypeOneOf1_FBytes2 struct {
	FBytes2 []byte `protobuf:"bytes,42,opt,name=f_bytes2,json=fBytes2,proto3,oneof"`
}

type TypeOneOf1_FEnum1 struct {
	FEnum1 EnumOneOf1 `protobuf:"varint,51,opt,name=f_enum1,json=fEnum1,proto3,enum=type_oneof.EnumOneOf1,oneof"`
}

type TypeOneOf1_FEnum2 struct {
	FEnum2 EnumOneOf1 `protobuf:"varint,52,opt,name=f_enum2,json=fEnum2,proto3,enum=type_oneof.EnumOneOf1,oneof"`
}

type TypeOneOf1_FEnum3 struct {
	FEnum3 pbexternal.Month1 `protobuf:"varint,53,opt,name=f_enum3,json=fEnum3,proto3,enum=external.Month1,oneof"`
}

type TypeOneOf1_FEnum4 struct {
	FEnum4 pbexternal.Month2 `protobuf:"varint,54,opt,name=f_enum4,json=fEnum4,proto3,enum=external.Month2,oneof"`
}

type TypeOneOf1_FEnum5 struct {
	FEnum5 pbexternal.EnumWeek1_Week `protobuf:"varint,55,opt,name=f_enum5,json=fEnum5,proto3,enum=external.EnumWeek1_Week,oneof"`
}

type TypeOneOf1_FEnum6 struct {
	FEnum6 pbexternal.EnumWeek2_Embed1_Week `protobuf:"varint,56,opt,name=f_enum6,json=fEnum6,proto3,enum=external.EnumWeek2_Embed1_Week,oneof"`
}

type TypeOneOf1_FEnum7 struct {
	FEnum7 EnumCommon1 `protobuf:"varint,57,opt,name=f_enum7,json=fEnum7,proto3,enum=private.EnumCommon1,oneof"`
}

type TypeOneOf1_FDuration1 struct {
	FDuration1 *durationpb.Duration `protobuf:"bytes,61,opt,name=f_duration1,json=fDuration1,proto3,oneof"`
}

type TypeOneOf1_FDuration2 struct {
	FDuration2 *durationpb.Duration `protobuf:"bytes,62,opt,name=f_duration2,json=fDuration2,proto3,oneof"`
}

type TypeOneOf1_FTimestamp1 struct {
	FTimestamp1 *timestamppb.Timestamp `protobuf:"bytes,63,opt,name=f_timestamp1,json=fTimestamp1,proto3,oneof"`
}

type TypeOneOf1_FTimestamp2 struct {
	FTimestamp2 *timestamppb.Timestamp `protobuf:"bytes,64,opt,name=f_timestamp2,json=fTimestamp2,proto3,oneof"`
}

type TypeOneOf1_FMessage11 struct {
	FMessage11 *MessageOneOf1 `protobuf:"bytes,71,opt,name=f_message11,json=fMessage11,proto3,oneof"`
}

type TypeOneOf1_FMessage12 struct {
	FMessage12 *MessageOneOf1_Embed1 `protobuf:"bytes,72,opt,name=f_message12,json=fMessage12,proto3,oneof"`
}

type TypeOneOf1_FMessage13 struct {
	FMessage13 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,73,opt,name=f_message13,json=fMessage13,proto3,oneof"`
}

type TypeOneOf1_FMessage14 struct {
	FMessage14 *pbexternal.External1 `protobuf:"bytes,74,opt,name=f_message14,json=fMessage14,proto3,oneof"`
}

type TypeOneOf1_FMessage15 struct {
	FMessage15 *pbexternal.External2_Embed1 `protobuf:"bytes,75,opt,name=f_message15,json=fMessage15,proto3,oneof"`
}

type TypeOneOf1_FMessage16 struct {
	FMessage16 *MessageCommon1 `protobuf:"bytes,76,opt,name=f_message16,json=fMessage16,proto3,oneof"`
}

type TypeOneOf1_FMessage17 struct {
	FMessage17 *MessageCommon1_Embed1 `protobuf:"bytes,77,opt,name=f_message17,json=fMessage17,proto3,oneof"`
}

type TypeOneOf1_FMessage18 struct {
	FMessage18 *MessageCommon1_Embed1_Embed2 `protobuf:"bytes,78,opt,name=f_message18,json=fMessage18,proto3,oneof"`
}

type TypeOneOf1_FMessage21 struct {
	FMessage21 *MessageOneOf1 `protobuf:"bytes,81,opt,name=f_message21,json=fMessage21,proto3,oneof"`
}

type TypeOneOf1_FMessage22 struct {
	FMessage22 *MessageOneOf1_Embed1 `protobuf:"bytes,82,opt,name=f_message22,json=fMessage22,proto3,oneof"`
}

type TypeOneOf1_FMessage23 struct {
	FMessage23 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,83,opt,name=f_message23,json=fMessage23,proto3,oneof"`
}

type TypeOneOf1_FMessage24 struct {
	FMessage24 *pbexternal.External1 `protobuf:"bytes,84,opt,name=f_message24,json=fMessage24,proto3,oneof"`
}

type TypeOneOf1_FMessage25 struct {
	FMessage25 *pbexternal.External2_Embed1 `protobuf:"bytes,85,opt,name=f_message25,json=fMessage25,proto3,oneof"`
}

type TypeOneOf1_FMessage26 struct {
	FMessage26 *MessageCommon1 `protobuf:"bytes,86,opt,name=f_message26,json=fMessage26,proto3,oneof"`
}

type TypeOneOf1_FMessage27 struct {
	FMessage27 *MessageCommon1_Embed1 `protobuf:"bytes,87,opt,name=f_message27,json=fMessage27,proto3,oneof"`
}

type TypeOneOf1_FMessage28 struct {
	FMessage28 *MessageCommon1_Embed1_Embed2 `protobuf:"bytes,88,opt,name=f_message28,json=fMessage28,proto3,oneof"`
}

type TypeOneOf1_FAny1 struct {
	FAny1 *anypb.Any `protobuf:"bytes,101,opt,name=f_any1,json=fAny1,proto3,oneof"`
}

type TypeOneOf1_FAny2 struct {
	FAny2 *anypb.Any `protobuf:"bytes,102,opt,name=f_any2,json=fAny2,proto3,oneof"`
}

type TypeOneOf1_FAny3 struct {
	FAny3 *anypb.Any `protobuf:"bytes,103,opt,name=f_any3,json=fAny3,proto3,oneof"`
}

type TypeOneOf1_FAny4 struct {
	FAny4 *anypb.Any `protobuf:"bytes,104,opt,name=f_any4,json=fAny4,proto3,oneof"`
}

type TypeOneOf1_FAny5 struct {
	FAny5 *anypb.Any `protobuf:"bytes,105,opt,name=f_any5,json=fAny5,proto3,oneof"`
}

type TypeOneOf1_FAny6 struct {
	FAny6 *anypb.Any `protobuf:"bytes,106,opt,name=f_any6,json=fAny6,proto3,oneof"`
}

type TypeOneOf1_FAny7 struct {
	FAny7 *anypb.Any `protobuf:"bytes,107,opt,name=f_any7,json=fAny7,proto3,oneof"`
}

type TypeOneOf1_FAny8 struct {
	FAny8 *anypb.Any `protobuf:"bytes,108,opt,name=f_any8,json=fAny8,proto3,oneof"`
}

type TypeOneOf1_FAny9 struct {
	FAny9 *anypb.Any `protobuf:"bytes,109,opt,name=f_any9,json=fAny9,proto3,oneof"`
}

func (*TypeOneOf1_FString1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString3) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString4) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString5) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString6) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString7) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString8) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FString9) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FInt32) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FInt64) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FUint32) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FUint64) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FSint32) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FSint64) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FSfixed32) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FSfixed64) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FFixed32) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FFixed64) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FFloat) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FDouble) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FBool1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FBool2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FBytes1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FBytes2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum3) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum4) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum5) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum6) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FEnum7) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FDuration1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FDuration2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FTimestamp1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FTimestamp2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage11) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage12) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage13) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage14) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage15) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage16) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage17) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage18) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage21) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage22) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage23) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage24) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage25) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage26) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage27) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FMessage28) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny1) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny2) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny3) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny4) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny5) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny6) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny7) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny8) isTypeOneOf1_OneType1() {}

func (*TypeOneOf1_FAny9) isTypeOneOf1_OneType1() {}

// Test case for oneof filed.
type TypeOneOf2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneStr1:
	//	*TypeOneOf2_FString1
	//	*TypeOneOf2_FString2
	OneStr1 isTypeOneOf2_OneStr1 `protobuf_oneof:"OneStr1"`
	// Types that are assignable to OneStr2:
	//	*TypeOneOf2_FString3
	//	*TypeOneOf2_FString4
	OneStr2 isTypeOneOf2_OneStr2 `protobuf_oneof:"OneStr2"`
	// Types that are assignable to OneMsg1:
	//	*TypeOneOf2_FMessage11
	//	*TypeOneOf2_FMessage12
	//	*TypeOneOf2_FMessage13
	//	*TypeOneOf2_FMessage14
	//	*TypeOneOf2_FMessage15
	OneMsg1 isTypeOneOf2_OneMsg1 `protobuf_oneof:"OneMsg1"`
	// Types that are assignable to OneMsg2:
	//	*TypeOneOf2_FMessage21
	//	*TypeOneOf2_FMessage22
	//	*TypeOneOf2_FMessage23
	//	*TypeOneOf2_FMessage24
	//	*TypeOneOf2_FMessage25
	OneMsg2 isTypeOneOf2_OneMsg2 `protobuf_oneof:"OneMsg2"`
	// Types that are assignable to OneMsg3:
	//	*TypeOneOf2_FMessage31
	//	*TypeOneOf2_FMessage32
	//	*TypeOneOf2_FMessage33
	//	*TypeOneOf2_FMessage34
	//	*TypeOneOf2_FMessage35
	OneMsg3 isTypeOneOf2_OneMsg3 `protobuf_oneof:"OneMsg3"`
	// Types that are assignable to OneMsg4:
	//	*TypeOneOf2_FMessage41
	//	*TypeOneOf2_FMessage42
	//	*TypeOneOf2_FMessage43
	//	*TypeOneOf2_FMessage44
	//	*TypeOneOf2_FMessage45
	OneMsg4 isTypeOneOf2_OneMsg4 `protobuf_oneof:"OneMsg4"`
	// Types that are assignable to OneMsg5:
	//	*TypeOneOf2_FMessage51
	//	*TypeOneOf2_FMessage52
	//	*TypeOneOf2_FMessage53
	//	*TypeOneOf2_FMessage54
	//	*TypeOneOf2_FMessage55
	OneMsg5 isTypeOneOf2_OneMsg5 `protobuf_oneof:"OneMsg5"`
}

func (x *TypeOneOf2) Reset() {
	*x = TypeOneOf2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeOneOf2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeOneOf2) ProtoMessage() {}

func (x *TypeOneOf2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeOneOf2.ProtoReflect.Descriptor instead.
func (*TypeOneOf2) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP(), []int{2}
}

func (m *TypeOneOf2) GetOneStr1() isTypeOneOf2_OneStr1 {
	if m != nil {
		return m.OneStr1
	}
	return nil
}

func (x *TypeOneOf2) GetFString1() string {
	if x, ok := x.GetOneStr1().(*TypeOneOf2_FString1); ok {
		return x.FString1
	}
	return ""
}

func (x *TypeOneOf2) GetFString2() string {
	if x, ok := x.GetOneStr1().(*TypeOneOf2_FString2); ok {
		return x.FString2
	}
	return ""
}

func (m *TypeOneOf2) GetOneStr2() isTypeOneOf2_OneStr2 {
	if m != nil {
		return m.OneStr2
	}
	return nil
}

func (x *TypeOneOf2) GetFString3() string {
	if x, ok := x.GetOneStr2().(*TypeOneOf2_FString3); ok {
		return x.FString3
	}
	return ""
}

func (x *TypeOneOf2) GetFString4() string {
	if x, ok := x.GetOneStr2().(*TypeOneOf2_FString4); ok {
		return x.FString4
	}
	return ""
}

func (m *TypeOneOf2) GetOneMsg1() isTypeOneOf2_OneMsg1 {
	if m != nil {
		return m.OneMsg1
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage11() *MessageOneOf1 {
	if x, ok := x.GetOneMsg1().(*TypeOneOf2_FMessage11); ok {
		return x.FMessage11
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage12() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneMsg1().(*TypeOneOf2_FMessage12); ok {
		return x.FMessage12
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage13() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneMsg1().(*TypeOneOf2_FMessage13); ok {
		return x.FMessage13
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage14() *pbexternal.External1 {
	if x, ok := x.GetOneMsg1().(*TypeOneOf2_FMessage14); ok {
		return x.FMessage14
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage15() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneMsg1().(*TypeOneOf2_FMessage15); ok {
		return x.FMessage15
	}
	return nil
}

func (m *TypeOneOf2) GetOneMsg2() isTypeOneOf2_OneMsg2 {
	if m != nil {
		return m.OneMsg2
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage21() *MessageOneOf1 {
	if x, ok := x.GetOneMsg2().(*TypeOneOf2_FMessage21); ok {
		return x.FMessage21
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage22() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneMsg2().(*TypeOneOf2_FMessage22); ok {
		return x.FMessage22
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage23() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneMsg2().(*TypeOneOf2_FMessage23); ok {
		return x.FMessage23
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage24() *pbexternal.External1 {
	if x, ok := x.GetOneMsg2().(*TypeOneOf2_FMessage24); ok {
		return x.FMessage24
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage25() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneMsg2().(*TypeOneOf2_FMessage25); ok {
		return x.FMessage25
	}
	return nil
}

func (m *TypeOneOf2) GetOneMsg3() isTypeOneOf2_OneMsg3 {
	if m != nil {
		return m.OneMsg3
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage31() *MessageOneOf1 {
	if x, ok := x.GetOneMsg3().(*TypeOneOf2_FMessage31); ok {
		return x.FMessage31
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage32() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneMsg3().(*TypeOneOf2_FMessage32); ok {
		return x.FMessage32
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage33() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneMsg3().(*TypeOneOf2_FMessage33); ok {
		return x.FMessage33
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage34() *pbexternal.External1 {
	if x, ok := x.GetOneMsg3().(*TypeOneOf2_FMessage34); ok {
		return x.FMessage34
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage35() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneMsg3().(*TypeOneOf2_FMessage35); ok {
		return x.FMessage35
	}
	return nil
}

func (m *TypeOneOf2) GetOneMsg4() isTypeOneOf2_OneMsg4 {
	if m != nil {
		return m.OneMsg4
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage41() *MessageOneOf1 {
	if x, ok := x.GetOneMsg4().(*TypeOneOf2_FMessage41); ok {
		return x.FMessage41
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage42() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneMsg4().(*TypeOneOf2_FMessage42); ok {
		return x.FMessage42
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage43() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneMsg4().(*TypeOneOf2_FMessage43); ok {
		return x.FMessage43
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage44() *pbexternal.External1 {
	if x, ok := x.GetOneMsg4().(*TypeOneOf2_FMessage44); ok {
		return x.FMessage44
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage45() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneMsg4().(*TypeOneOf2_FMessage45); ok {
		return x.FMessage45
	}
	return nil
}

func (m *TypeOneOf2) GetOneMsg5() isTypeOneOf2_OneMsg5 {
	if m != nil {
		return m.OneMsg5
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage51() *MessageOneOf1 {
	if x, ok := x.GetOneMsg5().(*TypeOneOf2_FMessage51); ok {
		return x.FMessage51
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage52() *MessageOneOf1_Embed1 {
	if x, ok := x.GetOneMsg5().(*TypeOneOf2_FMessage52); ok {
		return x.FMessage52
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage53() *MessageOneOf1_Embed1_Embed2 {
	if x, ok := x.GetOneMsg5().(*TypeOneOf2_FMessage53); ok {
		return x.FMessage53
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage54() *pbexternal.External1 {
	if x, ok := x.GetOneMsg5().(*TypeOneOf2_FMessage54); ok {
		return x.FMessage54
	}
	return nil
}

func (x *TypeOneOf2) GetFMessage55() *pbexternal.External2_Embed1 {
	if x, ok := x.GetOneMsg5().(*TypeOneOf2_FMessage55); ok {
		return x.FMessage55
	}
	return nil
}

type isTypeOneOf2_OneStr1 interface {
	isTypeOneOf2_OneStr1()
}

type TypeOneOf2_FString1 struct {
	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3,oneof"`
}

type TypeOneOf2_FString2 struct {
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3,oneof"`
}

func (*TypeOneOf2_FString1) isTypeOneOf2_OneStr1() {}

func (*TypeOneOf2_FString2) isTypeOneOf2_OneStr1() {}

type isTypeOneOf2_OneStr2 interface {
	isTypeOneOf2_OneStr2()
}

type TypeOneOf2_FString3 struct {
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3,oneof"`
}

type TypeOneOf2_FString4 struct {
	FString4 string `protobuf:"bytes,4,opt,name=f_string4,json=fString4,proto3,oneof"`
}

func (*TypeOneOf2_FString3) isTypeOneOf2_OneStr2() {}

func (*TypeOneOf2_FString4) isTypeOneOf2_OneStr2() {}

type isTypeOneOf2_OneMsg1 interface {
	isTypeOneOf2_OneMsg1()
}

type TypeOneOf2_FMessage11 struct {
	FMessage11 *MessageOneOf1 `protobuf:"bytes,11,opt,name=f_message11,json=fMessage11,proto3,oneof"`
}

type TypeOneOf2_FMessage12 struct {
	FMessage12 *MessageOneOf1_Embed1 `protobuf:"bytes,12,opt,name=f_message12,json=fMessage12,proto3,oneof"`
}

type TypeOneOf2_FMessage13 struct {
	FMessage13 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,13,opt,name=f_message13,json=fMessage13,proto3,oneof"`
}

type TypeOneOf2_FMessage14 struct {
	FMessage14 *pbexternal.External1 `protobuf:"bytes,14,opt,name=f_message14,json=fMessage14,proto3,oneof"`
}

type TypeOneOf2_FMessage15 struct {
	FMessage15 *pbexternal.External2_Embed1 `protobuf:"bytes,15,opt,name=f_message15,json=fMessage15,proto3,oneof"`
}

func (*TypeOneOf2_FMessage11) isTypeOneOf2_OneMsg1() {}

func (*TypeOneOf2_FMessage12) isTypeOneOf2_OneMsg1() {}

func (*TypeOneOf2_FMessage13) isTypeOneOf2_OneMsg1() {}

func (*TypeOneOf2_FMessage14) isTypeOneOf2_OneMsg1() {}

func (*TypeOneOf2_FMessage15) isTypeOneOf2_OneMsg1() {}

type isTypeOneOf2_OneMsg2 interface {
	isTypeOneOf2_OneMsg2()
}

type TypeOneOf2_FMessage21 struct {
	FMessage21 *MessageOneOf1 `protobuf:"bytes,21,opt,name=f_message21,json=fMessage21,proto3,oneof"`
}

type TypeOneOf2_FMessage22 struct {
	FMessage22 *MessageOneOf1_Embed1 `protobuf:"bytes,22,opt,name=f_message22,json=fMessage22,proto3,oneof"`
}

type TypeOneOf2_FMessage23 struct {
	FMessage23 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,23,opt,name=f_message23,json=fMessage23,proto3,oneof"`
}

type TypeOneOf2_FMessage24 struct {
	FMessage24 *pbexternal.External1 `protobuf:"bytes,24,opt,name=f_message24,json=fMessage24,proto3,oneof"`
}

type TypeOneOf2_FMessage25 struct {
	FMessage25 *pbexternal.External2_Embed1 `protobuf:"bytes,25,opt,name=f_message25,json=fMessage25,proto3,oneof"`
}

func (*TypeOneOf2_FMessage21) isTypeOneOf2_OneMsg2() {}

func (*TypeOneOf2_FMessage22) isTypeOneOf2_OneMsg2() {}

func (*TypeOneOf2_FMessage23) isTypeOneOf2_OneMsg2() {}

func (*TypeOneOf2_FMessage24) isTypeOneOf2_OneMsg2() {}

func (*TypeOneOf2_FMessage25) isTypeOneOf2_OneMsg2() {}

type isTypeOneOf2_OneMsg3 interface {
	isTypeOneOf2_OneMsg3()
}

type TypeOneOf2_FMessage31 struct {
	FMessage31 *MessageOneOf1 `protobuf:"bytes,31,opt,name=f_message31,json=fMessage31,proto3,oneof"`
}

type TypeOneOf2_FMessage32 struct {
	FMessage32 *MessageOneOf1_Embed1 `protobuf:"bytes,32,opt,name=f_message32,json=fMessage32,proto3,oneof"`
}

type TypeOneOf2_FMessage33 struct {
	FMessage33 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,33,opt,name=f_message33,json=fMessage33,proto3,oneof"`
}

type TypeOneOf2_FMessage34 struct {
	FMessage34 *pbexternal.External1 `protobuf:"bytes,34,opt,name=f_message34,json=fMessage34,proto3,oneof"`
}

type TypeOneOf2_FMessage35 struct {
	FMessage35 *pbexternal.External2_Embed1 `protobuf:"bytes,35,opt,name=f_message35,json=fMessage35,proto3,oneof"`
}

func (*TypeOneOf2_FMessage31) isTypeOneOf2_OneMsg3() {}

func (*TypeOneOf2_FMessage32) isTypeOneOf2_OneMsg3() {}

func (*TypeOneOf2_FMessage33) isTypeOneOf2_OneMsg3() {}

func (*TypeOneOf2_FMessage34) isTypeOneOf2_OneMsg3() {}

func (*TypeOneOf2_FMessage35) isTypeOneOf2_OneMsg3() {}

type isTypeOneOf2_OneMsg4 interface {
	isTypeOneOf2_OneMsg4()
}

type TypeOneOf2_FMessage41 struct {
	FMessage41 *MessageOneOf1 `protobuf:"bytes,41,opt,name=f_message41,json=fMessage41,proto3,oneof"`
}

type TypeOneOf2_FMessage42 struct {
	FMessage42 *MessageOneOf1_Embed1 `protobuf:"bytes,42,opt,name=f_message42,json=fMessage42,proto3,oneof"`
}

type TypeOneOf2_FMessage43 struct {
	FMessage43 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,43,opt,name=f_message43,json=fMessage43,proto3,oneof"`
}

type TypeOneOf2_FMessage44 struct {
	FMessage44 *pbexternal.External1 `protobuf:"bytes,44,opt,name=f_message44,json=fMessage44,proto3,oneof"`
}

type TypeOneOf2_FMessage45 struct {
	FMessage45 *pbexternal.External2_Embed1 `protobuf:"bytes,45,opt,name=f_message45,json=fMessage45,proto3,oneof"`
}

func (*TypeOneOf2_FMessage41) isTypeOneOf2_OneMsg4() {}

func (*TypeOneOf2_FMessage42) isTypeOneOf2_OneMsg4() {}

func (*TypeOneOf2_FMessage43) isTypeOneOf2_OneMsg4() {}

func (*TypeOneOf2_FMessage44) isTypeOneOf2_OneMsg4() {}

func (*TypeOneOf2_FMessage45) isTypeOneOf2_OneMsg4() {}

type isTypeOneOf2_OneMsg5 interface {
	isTypeOneOf2_OneMsg5()
}

type TypeOneOf2_FMessage51 struct {
	FMessage51 *MessageOneOf1 `protobuf:"bytes,51,opt,name=f_message51,json=fMessage51,proto3,oneof"`
}

type TypeOneOf2_FMessage52 struct {
	FMessage52 *MessageOneOf1_Embed1 `protobuf:"bytes,52,opt,name=f_message52,json=fMessage52,proto3,oneof"`
}

type TypeOneOf2_FMessage53 struct {
	FMessage53 *MessageOneOf1_Embed1_Embed2 `protobuf:"bytes,53,opt,name=f_message53,json=fMessage53,proto3,oneof"`
}

type TypeOneOf2_FMessage54 struct {
	FMessage54 *pbexternal.External1 `protobuf:"bytes,54,opt,name=f_message54,json=fMessage54,proto3,oneof"`
}

type TypeOneOf2_FMessage55 struct {
	FMessage55 *pbexternal.External2_Embed1 `protobuf:"bytes,55,opt,name=f_message55,json=fMessage55,proto3,oneof"`
}

func (*TypeOneOf2_FMessage51) isTypeOneOf2_OneMsg5() {}

func (*TypeOneOf2_FMessage52) isTypeOneOf2_OneMsg5() {}

func (*TypeOneOf2_FMessage53) isTypeOneOf2_OneMsg5() {}

func (*TypeOneOf2_FMessage54) isTypeOneOf2_OneMsg5() {}

func (*TypeOneOf2_FMessage55) isTypeOneOf2_OneMsg5() {}

type MessageOneOf1_Embed1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessageOneOf1_Embed1) Reset() {
	*x = MessageOneOf1_Embed1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOneOf1_Embed1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOneOf1_Embed1) ProtoMessage() {}

func (x *MessageOneOf1_Embed1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOneOf1_Embed1.ProtoReflect.Descriptor instead.
func (*MessageOneOf1_Embed1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MessageOneOf1_Embed1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessageOneOf1_Embed1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessageOneOf1_Embed1) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

type MessageOneOf1_Embed1_Embed2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessageOneOf1_Embed1_Embed2) Reset() {
	*x = MessageOneOf1_Embed1_Embed2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOneOf1_Embed1_Embed2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOneOf1_Embed1_Embed2) ProtoMessage() {}

func (x *MessageOneOf1_Embed1_Embed2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_oneof_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOneOf1_Embed1_Embed2.ProtoReflect.Descriptor instead.
func (*MessageOneOf1_Embed1_Embed2) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *MessageOneOf1_Embed1_Embed2) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessageOneOf1_Embed1_Embed2) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessageOneOf1_Embed1_Embed2) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

var File_tests_proto_cases_types_type_oneof_proto protoreflect.FileDescriptor

var file_tests_proto_cases_types_type_oneof_proto_rawDesc = []byte{
	0x0a, 0x28, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9f, 0x03, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65,
	0x4f, 0x66, 0x31, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03,
	0x7a, 0x01, 0x61, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x28, 0x0a,
	0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x62, 0x52, 0x08, 0x66,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07,
	0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x63, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x33, 0x1a, 0x8f, 0x02, 0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x12, 0x28, 0x0a, 0x09,
	0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x78, 0x52, 0x08, 0x66, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a,
	0x05, 0x0a, 0x03, 0x7a, 0x01, 0x79, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32,
	0x12, 0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x7a,
	0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x1a, 0x86, 0x01, 0x0a, 0x06, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x32, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05,
	0x0a, 0x03, 0x7a, 0x01, 0x31, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12,
	0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x32, 0x52,
	0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2,
	0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x33, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x33, 0x22, 0xe2, 0x1f, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x6e, 0x65, 0x4f,
	0x66, 0x31, 0x12, 0x2c, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x7a,
	0x03, 0x74, 0x73, 0x31, 0x48, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x12, 0x29, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x7a, 0x00, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x2b, 0x0a, 0x09, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xfa, 0xe2, 0x1e, 0x08, 0x0a, 0x06, 0x0a, 0x04, 0x7a, 0x02, 0x22, 0x22, 0x48, 0x00, 0x52, 0x08,
	0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa, 0xe2, 0x1e,
	0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x7a, 0x05, 0x22, 0x74, 0x73, 0x34, 0x22, 0x48, 0x00, 0x52, 0x08,
	0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa, 0xe2, 0x1e,
	0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x7a, 0x05, 0x22, 0x74, 0x73, 0x35, 0x22, 0x48, 0x00, 0x52, 0x08,
	0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x35, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0xe2, 0x1e,
	0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x7a, 0x06, 0x22, 0x74, 0x73, 0x22, 0x36, 0x22, 0x48, 0x00, 0x52,
	0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x36, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0xe2,
	0x1e, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x7a, 0x06, 0x22, 0x74, 0x73, 0x22, 0x37, 0x22, 0x48, 0x00,
	0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x37, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa,
	0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x7a, 0x05, 0x5b, 0x74, 0x73, 0x38, 0x5d, 0x48, 0x00,
	0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x38, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x39, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa,
	0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x7a, 0x05, 0x7b, 0x74, 0x73, 0x39, 0x7d, 0x48, 0x00,
	0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x39, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x5f,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0xe2, 0x1e,
	0x06, 0x0a, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x10, 0x02, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06,
	0x0a, 0x04, 0x0a, 0x02, 0x38, 0x03, 0x48, 0x00, 0x52, 0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x40, 0x04, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x5f,
	0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x42, 0x0a, 0xfa, 0xe2,
	0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x18, 0x0a, 0x48, 0x00, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x12, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x20,
	0x0c, 0x48, 0x00, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x2e, 0x0a, 0x0a,
	0x66, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0f,
	0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x2d, 0x07, 0x00, 0x00, 0x00, 0x48,
	0x00, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x32, 0x0a, 0x0a,
	0x66, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x12, 0x20, 0x01, 0x28, 0x10,
	0x42, 0x11, 0xfa, 0xe2, 0x1e, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x48, 0x00, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x12, 0x2c, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x07, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x4d, 0x09, 0x00,
	0x00, 0x00, 0x48, 0x00, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x30,
	0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x06, 0x42, 0x11, 0xfa, 0xe2, 0x1e, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x51, 0x0a, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x12, 0x28, 0x0a, 0x07, 0x66, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x02, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x5d, 0x8f, 0xc2, 0x31, 0x41,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x66, 0x5f,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x42, 0x11, 0xfa, 0xe2,
	0x1e, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x61, 0x3d, 0x0a, 0xd7, 0xa3, 0x70, 0x3d, 0x28, 0x40, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x5f,
	0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0xfa, 0xe2, 0x1e,
	0x06, 0x0a, 0x04, 0x0a, 0x02, 0x68, 0x01, 0x48, 0x00, 0x52, 0x06, 0x66, 0x42, 0x6f, 0x6f, 0x6c,
	0x31, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x68, 0x00, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x42, 0x6f, 0x6f, 0x6c, 0x32, 0x12, 0x28, 0x0a, 0x08, 0x66, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07,
	0x0a, 0x05, 0x0a, 0x03, 0x82, 0x01, 0x00, 0x48, 0x00, 0x52, 0x07, 0x66, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x31, 0x12, 0x2b, 0x0a, 0x08, 0x66, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x32, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x0e, 0xfa, 0xe2, 0x1e, 0x0a, 0x0a, 0x08, 0x0a, 0x06, 0x82, 0x01,
	0x03, 0x61, 0x62, 0x63, 0x48, 0x00, 0x52, 0x07, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x32, 0x12,
	0x3d, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x31, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04,
	0x0a, 0x02, 0x70, 0x02, 0x48, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x12, 0x3d,
	0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x32, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a,
	0x02, 0x70, 0x0a, 0x48, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x12, 0x37, 0x0a,
	0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x33, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x31,
	0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x70, 0x01, 0x48, 0x00, 0x52, 0x06,
	0x66, 0x45, 0x6e, 0x75, 0x6d, 0x33, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x34, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a,
	0x04, 0x0a, 0x02, 0x70, 0x07, 0x48, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x34, 0x12,
	0x3f, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x35, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x57, 0x65, 0x65, 0x6b, 0x31, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06,
	0x0a, 0x04, 0x0a, 0x02, 0x70, 0x03, 0x48, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x35,
	0x12, 0x46, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x36, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x57, 0x65, 0x65, 0x6b, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x57, 0x65,
	0x65, 0x6b, 0x42, 0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x70, 0x0d, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x36, 0x12, 0x3b, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x37, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x31, 0x42,
	0x0a, 0xfa, 0xe2, 0x1e, 0x06, 0x0a, 0x04, 0x0a, 0x02, 0x70, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x45, 0x6e, 0x75, 0x6d, 0x37, 0x12, 0x4e, 0x0a, 0x0b, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x31, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0xfa, 0xe2, 0x1e, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0xb2,
	0x01, 0x05, 0x08, 0x64, 0x10, 0xc8, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x49, 0x0a, 0x0b, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0xb2,
	0x01, 0x00, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0x12, 0x52, 0x0a, 0x0c, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x11, 0xfa, 0xe2, 0x1e, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0xba, 0x01, 0x06, 0x08,
	0xc8, 0x01, 0x10, 0xac, 0x02, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x31, 0x12, 0x4c, 0x0a, 0x0c, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x32, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03,
	0xba, 0x01, 0x00, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x32, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31,
	0x31, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f,
	0x66, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08,
	0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x31, 0x12,
	0x54, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x32, 0x18, 0x48,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05,
	0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x31, 0x32, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x33, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x32, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02,
	0x08, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x33,
	0x12, 0x47, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x34, 0x18,
	0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b,
	0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x34, 0x12, 0x4c, 0x0a, 0x0b, 0x66, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x35, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09,
	0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x35, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x31, 0x36, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a,
	0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x36, 0x12, 0x50, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x31, 0x37, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a,
	0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x31, 0x37, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x31, 0x38, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x32, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08,
	0x01, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31,
	0x38, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x31,
	0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66,
	0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x00,
	0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x31, 0x12, 0x54,
	0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x32, 0x18, 0x52, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a,
	0x01, 0x02, 0x08, 0x00, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0x32, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x33, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e,
	0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x32, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08,
	0x00, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x33, 0x12,
	0x47, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x34, 0x18, 0x54,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a,
	0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x00, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x34, 0x12, 0x4c, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x35, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a,
	0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x00, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0x35, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0x36, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01,
	0x02, 0x08, 0x00, 0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x36, 0x12, 0x50, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x37, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07,
	0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x00, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0x37, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0x38, 0x18, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x32, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x00,
	0x58, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x38,
	0x12, 0x4a, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x31, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x1b, 0xfa, 0xe2, 0x1e, 0x17, 0x0a, 0x15, 0x0a, 0x13,
	0xaa, 0x01, 0x10, 0x5a, 0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65,
	0x4f, 0x66, 0x31, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x31, 0x12, 0x4c, 0x0a, 0x06,
	0x66, 0x5f, 0x61, 0x6e, 0x79, 0x32, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x42, 0x1d, 0xfa, 0xe2, 0x1e, 0x19, 0x0a, 0x17, 0x0a, 0x13, 0xaa, 0x01, 0x10, 0x5a,
	0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x58,
	0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x32, 0x12, 0x75, 0x0a, 0x06, 0x66, 0x5f,
	0x61, 0x6e, 0x79, 0x33, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x42, 0x46, 0xfa, 0xe2, 0x1e, 0x42, 0x0a, 0x40, 0x0a, 0x3c, 0xaa, 0x01, 0x39, 0x5a, 0x37, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x58, 0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79,
	0x33, 0x12, 0x58, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x34, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x29, 0xfa, 0xe2, 0x1e, 0x25, 0x0a, 0x23, 0x0a,
	0x21, 0xaa, 0x01, 0x1e, 0x5a, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e,
	0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x32, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x34, 0x12, 0x63, 0x0a, 0x06, 0x66,
	0x5f, 0x61, 0x6e, 0x79, 0x35, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x42, 0x34, 0xfa, 0xe2, 0x1e, 0x30, 0x0a, 0x2e, 0x0a, 0x2a, 0xaa, 0x01, 0x27, 0x5a, 0x25,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x31, 0x58, 0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x35,
	0x12, 0x68, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x36, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x39, 0xfa, 0xe2, 0x1e, 0x35, 0x0a, 0x33, 0x0a, 0x31,
	0xaa, 0x01, 0x2e, 0x5a, 0x2c, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x31, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x36, 0x12, 0x5f, 0x0a, 0x06, 0x66, 0x5f,
	0x61, 0x6e, 0x79, 0x37, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x42, 0x30, 0xfa, 0xe2, 0x1e, 0x2c, 0x0a, 0x2a, 0x0a, 0x28, 0xaa, 0x01, 0x25, 0x5a, 0x23, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x37, 0x12, 0x53, 0x0a, 0x06, 0x66,
	0x5f, 0x61, 0x6e, 0x79, 0x38, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x42, 0x24, 0xfa, 0xe2, 0x1e, 0x20, 0x0a, 0x1e, 0x0a, 0x1c, 0xaa, 0x01, 0x19, 0x5a, 0x17,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x38,
	0x12, 0x6a, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x39, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x3b, 0xfa, 0xe2, 0x1e, 0x37, 0x0a, 0x35, 0x0a, 0x33,
	0xaa, 0x01, 0x30, 0x5a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x31, 0x48, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x39, 0x42, 0x0a, 0x0a, 0x08,
	0x4f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x22, 0xf3, 0x12, 0x0a, 0x0a, 0x54, 0x79, 0x70,
	0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x32, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07,
	0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x61, 0x48, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03,
	0x7a, 0x01, 0x62, 0x48, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12,
	0x2a, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x63, 0x48,
	0x01, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x12, 0x2a, 0x0a, 0x09, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0xe2, 0x1e, 0x07, 0x0a, 0x05, 0x0a, 0x03, 0x7a, 0x01, 0x64, 0x48, 0x01, 0x52, 0x08, 0x66,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x31, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a,
	0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x02, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x31, 0x12, 0x54, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x31, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e,
	0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e,
	0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x02, 0x52, 0x0a,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x32, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07,
	0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x02, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x31, 0x33, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x31, 0x42,
	0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01,
	0x48, 0x02, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x34, 0x12, 0x4c,
	0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x35, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42,
	0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x02,
	0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x35, 0x12, 0x4b, 0x0a, 0x0b,
	0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x42, 0x0d, 0xfa, 0xe2,
	0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x03, 0x52, 0x0a, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x31, 0x12, 0x54, 0x0a, 0x0b, 0x66, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31,
	0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58,
	0x01, 0x48, 0x03, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x32, 0x12,
	0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x33, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x42, 0x0d, 0xfa,
	0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x03, 0x52, 0x0a,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x33, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x34, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01,
	0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x03, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x34, 0x12, 0x4c, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x35, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x32, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01,
	0x02, 0x08, 0x01, 0x48, 0x03, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0x35, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x31,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66,
	0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01,
	0x48, 0x04, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x31, 0x12, 0x54,
	0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x32, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a,
	0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x04, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x33, 0x32, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x33, 0x33, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e,
	0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x32, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08,
	0x01, 0x48, 0x04, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x33, 0x12,
	0x47, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x34, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a,
	0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x04, 0x52, 0x0a, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x34, 0x12, 0x4c, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x35, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a,
	0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x04, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x33, 0x35, 0x12, 0x4b, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x34, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05,
	0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x05, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x34, 0x31, 0x12, 0x54, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x34, 0x32, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65,
	0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b,
	0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48, 0x05, 0x52, 0x0a, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x32, 0x12, 0x59, 0x0a, 0x0b, 0x66, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x33, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31,
	0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a,
	0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x05, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x34, 0x33, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x34, 0x34, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x31, 0x42, 0x0f,
	0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01, 0x48,
	0x05, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x34, 0x12, 0x4c, 0x0a,
	0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x35, 0x18, 0x2d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x0d,
	0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x05, 0x52,
	0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x35, 0x12, 0x4b, 0x0a, 0x0b, 0x66,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x31, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e,
	0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x06, 0x52, 0x0a, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x31, 0x12, 0x54, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x32, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42,
	0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x58, 0x01,
	0x48, 0x06, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x32, 0x12, 0x59,
	0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x33, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x42, 0x0d, 0xfa, 0xe2,
	0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x48, 0x06, 0x52, 0x0a, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x33, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x34, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x31, 0x42, 0x0f, 0xfa, 0xe2, 0x1e, 0x0b, 0x0a, 0x09, 0x0a, 0x05, 0x8a, 0x01, 0x02,
	0x08, 0x01, 0x58, 0x01, 0x48, 0x06, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x35, 0x34, 0x12, 0x4c, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35,
	0x35, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x32, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x31, 0x42, 0x0d, 0xfa, 0xe2, 0x1e, 0x09, 0x0a, 0x07, 0x0a, 0x05, 0x8a, 0x01, 0x02,
	0x08, 0x01, 0x48, 0x06, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x35,
	0x42, 0x1a, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x31, 0x12, 0x0f, 0x82, 0xe3, 0x1e,
	0x0b, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x42, 0x1a, 0x0a, 0x07,
	0x4f, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x32, 0x12, 0x0f, 0x82, 0xe3, 0x1e, 0x0b, 0x0a, 0x09, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34, 0x42, 0x1c, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x4d,
	0x73, 0x67, 0x31, 0x12, 0x11, 0x82, 0xe3, 0x1e, 0x0d, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x31, 0x31, 0x42, 0x1c, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x4d, 0x73, 0x67,
	0x32, 0x12, 0x11, 0x82, 0xe3, 0x1e, 0x0d, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0x32, 0x42, 0x1c, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x33, 0x12,
	0x11, 0x82, 0xe3, 0x1e, 0x0d, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x33, 0x33, 0x42, 0x1c, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x34, 0x12, 0x11, 0x82,
	0xe3, 0x1e, 0x0d, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x34,
	0x42, 0x1c, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x35, 0x12, 0x11, 0x82, 0xe3, 0x1e,
	0x0d, 0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x35, 0x35, 0x2a, 0x79,
	0x0a, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x31, 0x12, 0x08, 0x0a, 0x04,
	0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x6e, 0x65, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x68, 0x72, 0x65,
	0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x6f, 0x75, 0x72, 0x10, 0x06, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x69, 0x78, 0x10, 0x09,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x69, 0x67, 0x68, 0x74, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x69, 0x6e, 0x65, 0x10, 0x0f,
	0x12, 0x07, 0x0a, 0x03, 0x54, 0x65, 0x6e, 0x10, 0x11, 0x42, 0x16, 0x5a, 0x14, 0x78, 0x67, 0x6f,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_types_type_oneof_proto_rawDescOnce sync.Once
	file_tests_proto_cases_types_type_oneof_proto_rawDescData = file_tests_proto_cases_types_type_oneof_proto_rawDesc
)

func file_tests_proto_cases_types_type_oneof_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_types_type_oneof_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_types_type_oneof_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_types_type_oneof_proto_rawDescData)
	})
	return file_tests_proto_cases_types_type_oneof_proto_rawDescData
}

var file_tests_proto_cases_types_type_oneof_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tests_proto_cases_types_type_oneof_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tests_proto_cases_types_type_oneof_proto_goTypes = []interface{}{
	(EnumOneOf1)(0),                       // 0: type_oneof.EnumOneOf1
	(*MessageOneOf1)(nil),                 // 1: type_oneof.MessageOneOf1
	(*TypeOneOf1)(nil),                    // 2: type_oneof.TypeOneOf1
	(*TypeOneOf2)(nil),                    // 3: type_oneof.TypeOneOf2
	(*MessageOneOf1_Embed1)(nil),          // 4: type_oneof.MessageOneOf1.Embed1
	(*MessageOneOf1_Embed1_Embed2)(nil),   // 5: type_oneof.MessageOneOf1.Embed1.Embed2
	(pbexternal.Month1)(0),                // 6: external.Month1
	(pbexternal.Month2)(0),                // 7: external.Month2
	(pbexternal.EnumWeek1_Week)(0),        // 8: external.EnumWeek1.Week
	(pbexternal.EnumWeek2_Embed1_Week)(0), // 9: external.EnumWeek2.Embed1.Week
	(EnumCommon1)(0),                      // 10: private.EnumCommon1
	(*durationpb.Duration)(nil),           // 11: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),         // 12: google.protobuf.Timestamp
	(*pbexternal.External1)(nil),          // 13: external.External1
	(*pbexternal.External2_Embed1)(nil),   // 14: external.External2.Embed1
	(*MessageCommon1)(nil),                // 15: private.MessageCommon1
	(*MessageCommon1_Embed1)(nil),         // 16: private.MessageCommon1.Embed1
	(*MessageCommon1_Embed1_Embed2)(nil),  // 17: private.MessageCommon1.Embed1.Embed2
	(*anypb.Any)(nil),                     // 18: google.protobuf.Any
}
var file_tests_proto_cases_types_type_oneof_proto_depIdxs = []int32{
	0,  // 0: type_oneof.TypeOneOf1.f_enum1:type_name -> type_oneof.EnumOneOf1
	0,  // 1: type_oneof.TypeOneOf1.f_enum2:type_name -> type_oneof.EnumOneOf1
	6,  // 2: type_oneof.TypeOneOf1.f_enum3:type_name -> external.Month1
	7,  // 3: type_oneof.TypeOneOf1.f_enum4:type_name -> external.Month2
	8,  // 4: type_oneof.TypeOneOf1.f_enum5:type_name -> external.EnumWeek1.Week
	9,  // 5: type_oneof.TypeOneOf1.f_enum6:type_name -> external.EnumWeek2.Embed1.Week
	10, // 6: type_oneof.TypeOneOf1.f_enum7:type_name -> private.EnumCommon1
	11, // 7: type_oneof.TypeOneOf1.f_duration1:type_name -> google.protobuf.Duration
	11, // 8: type_oneof.TypeOneOf1.f_duration2:type_name -> google.protobuf.Duration
	12, // 9: type_oneof.TypeOneOf1.f_timestamp1:type_name -> google.protobuf.Timestamp
	12, // 10: type_oneof.TypeOneOf1.f_timestamp2:type_name -> google.protobuf.Timestamp
	1,  // 11: type_oneof.TypeOneOf1.f_message11:type_name -> type_oneof.MessageOneOf1
	4,  // 12: type_oneof.TypeOneOf1.f_message12:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 13: type_oneof.TypeOneOf1.f_message13:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 14: type_oneof.TypeOneOf1.f_message14:type_name -> external.External1
	14, // 15: type_oneof.TypeOneOf1.f_message15:type_name -> external.External2.Embed1
	15, // 16: type_oneof.TypeOneOf1.f_message16:type_name -> private.MessageCommon1
	16, // 17: type_oneof.TypeOneOf1.f_message17:type_name -> private.MessageCommon1.Embed1
	17, // 18: type_oneof.TypeOneOf1.f_message18:type_name -> private.MessageCommon1.Embed1.Embed2
	1,  // 19: type_oneof.TypeOneOf1.f_message21:type_name -> type_oneof.MessageOneOf1
	4,  // 20: type_oneof.TypeOneOf1.f_message22:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 21: type_oneof.TypeOneOf1.f_message23:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 22: type_oneof.TypeOneOf1.f_message24:type_name -> external.External1
	14, // 23: type_oneof.TypeOneOf1.f_message25:type_name -> external.External2.Embed1
	15, // 24: type_oneof.TypeOneOf1.f_message26:type_name -> private.MessageCommon1
	16, // 25: type_oneof.TypeOneOf1.f_message27:type_name -> private.MessageCommon1.Embed1
	17, // 26: type_oneof.TypeOneOf1.f_message28:type_name -> private.MessageCommon1.Embed1.Embed2
	18, // 27: type_oneof.TypeOneOf1.f_any1:type_name -> google.protobuf.Any
	18, // 28: type_oneof.TypeOneOf1.f_any2:type_name -> google.protobuf.Any
	18, // 29: type_oneof.TypeOneOf1.f_any3:type_name -> google.protobuf.Any
	18, // 30: type_oneof.TypeOneOf1.f_any4:type_name -> google.protobuf.Any
	18, // 31: type_oneof.TypeOneOf1.f_any5:type_name -> google.protobuf.Any
	18, // 32: type_oneof.TypeOneOf1.f_any6:type_name -> google.protobuf.Any
	18, // 33: type_oneof.TypeOneOf1.f_any7:type_name -> google.protobuf.Any
	18, // 34: type_oneof.TypeOneOf1.f_any8:type_name -> google.protobuf.Any
	18, // 35: type_oneof.TypeOneOf1.f_any9:type_name -> google.protobuf.Any
	1,  // 36: type_oneof.TypeOneOf2.f_message11:type_name -> type_oneof.MessageOneOf1
	4,  // 37: type_oneof.TypeOneOf2.f_message12:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 38: type_oneof.TypeOneOf2.f_message13:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 39: type_oneof.TypeOneOf2.f_message14:type_name -> external.External1
	14, // 40: type_oneof.TypeOneOf2.f_message15:type_name -> external.External2.Embed1
	1,  // 41: type_oneof.TypeOneOf2.f_message21:type_name -> type_oneof.MessageOneOf1
	4,  // 42: type_oneof.TypeOneOf2.f_message22:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 43: type_oneof.TypeOneOf2.f_message23:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 44: type_oneof.TypeOneOf2.f_message24:type_name -> external.External1
	14, // 45: type_oneof.TypeOneOf2.f_message25:type_name -> external.External2.Embed1
	1,  // 46: type_oneof.TypeOneOf2.f_message31:type_name -> type_oneof.MessageOneOf1
	4,  // 47: type_oneof.TypeOneOf2.f_message32:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 48: type_oneof.TypeOneOf2.f_message33:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 49: type_oneof.TypeOneOf2.f_message34:type_name -> external.External1
	14, // 50: type_oneof.TypeOneOf2.f_message35:type_name -> external.External2.Embed1
	1,  // 51: type_oneof.TypeOneOf2.f_message41:type_name -> type_oneof.MessageOneOf1
	4,  // 52: type_oneof.TypeOneOf2.f_message42:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 53: type_oneof.TypeOneOf2.f_message43:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 54: type_oneof.TypeOneOf2.f_message44:type_name -> external.External1
	14, // 55: type_oneof.TypeOneOf2.f_message45:type_name -> external.External2.Embed1
	1,  // 56: type_oneof.TypeOneOf2.f_message51:type_name -> type_oneof.MessageOneOf1
	4,  // 57: type_oneof.TypeOneOf2.f_message52:type_name -> type_oneof.MessageOneOf1.Embed1
	5,  // 58: type_oneof.TypeOneOf2.f_message53:type_name -> type_oneof.MessageOneOf1.Embed1.Embed2
	13, // 59: type_oneof.TypeOneOf2.f_message54:type_name -> external.External1
	14, // 60: type_oneof.TypeOneOf2.f_message55:type_name -> external.External2.Embed1
	61, // [61:61] is the sub-list for method output_type
	61, // [61:61] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_types_type_oneof_proto_init() }
func file_tests_proto_cases_types_type_oneof_proto_init() {
	if File_tests_proto_cases_types_type_oneof_proto != nil {
		return
	}
	file_tests_proto_cases_types_private_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_types_type_oneof_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOneOf1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_oneof_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeOneOf1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_oneof_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeOneOf2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_oneof_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOneOf1_Embed1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_oneof_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOneOf1_Embed1_Embed2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tests_proto_cases_types_type_oneof_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TypeOneOf1_FString1)(nil),
		(*TypeOneOf1_FString2)(nil),
		(*TypeOneOf1_FString3)(nil),
		(*TypeOneOf1_FString4)(nil),
		(*TypeOneOf1_FString5)(nil),
		(*TypeOneOf1_FString6)(nil),
		(*TypeOneOf1_FString7)(nil),
		(*TypeOneOf1_FString8)(nil),
		(*TypeOneOf1_FString9)(nil),
		(*TypeOneOf1_FInt32)(nil),
		(*TypeOneOf1_FInt64)(nil),
		(*TypeOneOf1_FUint32)(nil),
		(*TypeOneOf1_FUint64)(nil),
		(*TypeOneOf1_FSint32)(nil),
		(*TypeOneOf1_FSint64)(nil),
		(*TypeOneOf1_FSfixed32)(nil),
		(*TypeOneOf1_FSfixed64)(nil),
		(*TypeOneOf1_FFixed32)(nil),
		(*TypeOneOf1_FFixed64)(nil),
		(*TypeOneOf1_FFloat)(nil),
		(*TypeOneOf1_FDouble)(nil),
		(*TypeOneOf1_FBool1)(nil),
		(*TypeOneOf1_FBool2)(nil),
		(*TypeOneOf1_FBytes1)(nil),
		(*TypeOneOf1_FBytes2)(nil),
		(*TypeOneOf1_FEnum1)(nil),
		(*TypeOneOf1_FEnum2)(nil),
		(*TypeOneOf1_FEnum3)(nil),
		(*TypeOneOf1_FEnum4)(nil),
		(*TypeOneOf1_FEnum5)(nil),
		(*TypeOneOf1_FEnum6)(nil),
		(*TypeOneOf1_FEnum7)(nil),
		(*TypeOneOf1_FDuration1)(nil),
		(*TypeOneOf1_FDuration2)(nil),
		(*TypeOneOf1_FTimestamp1)(nil),
		(*TypeOneOf1_FTimestamp2)(nil),
		(*TypeOneOf1_FMessage11)(nil),
		(*TypeOneOf1_FMessage12)(nil),
		(*TypeOneOf1_FMessage13)(nil),
		(*TypeOneOf1_FMessage14)(nil),
		(*TypeOneOf1_FMessage15)(nil),
		(*TypeOneOf1_FMessage16)(nil),
		(*TypeOneOf1_FMessage17)(nil),
		(*TypeOneOf1_FMessage18)(nil),
		(*TypeOneOf1_FMessage21)(nil),
		(*TypeOneOf1_FMessage22)(nil),
		(*TypeOneOf1_FMessage23)(nil),
		(*TypeOneOf1_FMessage24)(nil),
		(*TypeOneOf1_FMessage25)(nil),
		(*TypeOneOf1_FMessage26)(nil),
		(*TypeOneOf1_FMessage27)(nil),
		(*TypeOneOf1_FMessage28)(nil),
		(*TypeOneOf1_FAny1)(nil),
		(*TypeOneOf1_FAny2)(nil),
		(*TypeOneOf1_FAny3)(nil),
		(*TypeOneOf1_FAny4)(nil),
		(*TypeOneOf1_FAny5)(nil),
		(*TypeOneOf1_FAny6)(nil),
		(*TypeOneOf1_FAny7)(nil),
		(*TypeOneOf1_FAny8)(nil),
		(*TypeOneOf1_FAny9)(nil),
	}
	file_tests_proto_cases_types_type_oneof_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TypeOneOf2_FString1)(nil),
		(*TypeOneOf2_FString2)(nil),
		(*TypeOneOf2_FString3)(nil),
		(*TypeOneOf2_FString4)(nil),
		(*TypeOneOf2_FMessage11)(nil),
		(*TypeOneOf2_FMessage12)(nil),
		(*TypeOneOf2_FMessage13)(nil),
		(*TypeOneOf2_FMessage14)(nil),
		(*TypeOneOf2_FMessage15)(nil),
		(*TypeOneOf2_FMessage21)(nil),
		(*TypeOneOf2_FMessage22)(nil),
		(*TypeOneOf2_FMessage23)(nil),
		(*TypeOneOf2_FMessage24)(nil),
		(*TypeOneOf2_FMessage25)(nil),
		(*TypeOneOf2_FMessage31)(nil),
		(*TypeOneOf2_FMessage32)(nil),
		(*TypeOneOf2_FMessage33)(nil),
		(*TypeOneOf2_FMessage34)(nil),
		(*TypeOneOf2_FMessage35)(nil),
		(*TypeOneOf2_FMessage41)(nil),
		(*TypeOneOf2_FMessage42)(nil),
		(*TypeOneOf2_FMessage43)(nil),
		(*TypeOneOf2_FMessage44)(nil),
		(*TypeOneOf2_FMessage45)(nil),
		(*TypeOneOf2_FMessage51)(nil),
		(*TypeOneOf2_FMessage52)(nil),
		(*TypeOneOf2_FMessage53)(nil),
		(*TypeOneOf2_FMessage54)(nil),
		(*TypeOneOf2_FMessage55)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_types_type_oneof_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_types_type_oneof_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_types_type_oneof_proto_depIdxs,
		EnumInfos:         file_tests_proto_cases_types_type_oneof_proto_enumTypes,
		MessageInfos:      file_tests_proto_cases_types_type_oneof_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_types_type_oneof_proto = out.File
	file_tests_proto_cases_types_type_oneof_proto_rawDesc = nil
	file_tests_proto_cases_types_type_oneof_proto_goTypes = nil
	file_tests_proto_cases_types_type_oneof_proto_depIdxs = nil
}
