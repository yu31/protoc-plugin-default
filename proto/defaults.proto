syntax = "proto3";

package defaults;

option go_package = "github.com/yu31/protoc-plugin-defaults/xgo/pb/pbdefaults";

// Package name of class.
option java_package = "io.github.yu31.protoc.pb.pbdefaults";
// File name of class.
option java_outer_classname = "PBDefaults";
option java_multiple_files = true;

import "google/protobuf/descriptor.proto";

//import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

extend google.protobuf.FieldOptions {
  FieldOptions field = 64020;
}

extend google.protobuf.OneofOptions {
  OneOfOptions oneof = 64021;
}

// OneOfOptions is the options for the oneof field.
message OneOfOptions {
  // The name of filed in `oneof` part.
  optional string field = 1;
}

// FieldOptions is the options for the `field` level.
message FieldOptions {
  oneof Kind {
    // PlainOptions declares the tags applied to the plain field.
    PlainOptions plain = 1;

    // RepeatedOptions declares the tags applied to the repeated filed.
    RepeatedOptions repeated = 2;

    // MapTags declares the tags applied to the map filed.
    MapOptions map = 3;
  }
}

// PlainOptions declares the options applied to the plain filed.
message PlainOptions {
  // value declares the default value for field.
  FieldType value = 1;

  // By default, For optional field and field type are bytes, the default value will be applied if field value are nil or empty.
  // If the `apply_emtpy` is true, Only apply the default value if the field is a nil pointer.
  optional bool ignore_empty = 2;

  // By default, We will try to eval call the method of defaults for type of field are message and any.
  // If `skip_eval` is true, the method of defaults will not be called.
  // Only effective for language Go.
  optional bool skip_eval = 11;
}

// RepeatedOptions declares the options applied to the repeated filed.
message RepeatedOptions {
  // items declares the default value for field.
  repeated FieldType items = 1;

  // By default, The default value will be applied if the length of field is zero.
  // If `ignore_empty` is true, Only apply the default value if the field is a nil pointer.
  // Only effective for language Go.
  optional bool ignore_empty = 2;

  // By default, We will try to eval call the method of defaults for type of repeated items are message and any.
  // If `skip_eval` is true, the method of defaults will not be called.
  // Only effective for language Go.
  optional bool skip_eval = 11;
}

// MapOptions declares the options applied to the map filed.
message MapOptions {
  message KV {
    FieldType key = 1;
    FieldType value = 2;
  }

  // kvs declares the the default value for field.
  repeated KV kvs = 1;

  // By default, The default value will be applied if the length of field is zero.
  // If `ignore_empty` is true, Only apply the default value if the field is a nil pointer.
  // Only effective for language Go.
  optional bool ignore_empty = 2;

  // By default, We will try to eval call the method of defaults for type of map value are message and any.
  // If `skip_eval` is true, the method of defaults will not be called.
  // Only effective for language Go.
  optional bool skip_eval = 11;
}

message FieldType {
  oneof Kind {
    // int32 declares the default value for field type of `int32`.
    int32 int32 = 1;

    // int64 declares the default value for field type of `int64`.
    int64 int64 = 2;

    // sint32 declares the default value for field type of `sint32`.
    sint32 sint32 = 3;

    // sint64 declares the default value for field type of `sint64`.
    sint64 sint64 = 4;

    // sfixed32 declares the default value for field type of `sfixed32`.
    sfixed32 sfixed32 = 5;

    // sfixed64 declares the default value for field type of `sfixed64`.
    sfixed64 sfixed64 = 6;

    // uint32 declares the default value for field type of `uint32`.
    uint32 uint32 = 7;

    // uint64 declares the default value for field type of `uint64`.
    uint64 uint64 = 8;

    // fixed32 declares the default value for field type of `fixed32`.
    fixed32 fixed32 = 9;

    // fixed64 declares the default value for field type of `fixed64`.
    fixed64 fixed64 = 10;

    // float declares the default value for field type of `float`.
    float float = 11;

    // double declares the default value for field type of `dobule`.
    double double = 12;

    // bool declares the default value for field type of `bool`.
    bool bool = 13;

    // enum declares the default value for field type of `enum`.
    int32 enum = 14;

    // string declares the default value for field type of `string`.
    string string = 15;

    // bytes declares the default value for field type of `bytes`.
    bytes bytes = 16;

    // message declares the default value for field type of `message`.
    TypeMessage message = 17;

    // any declares the default value for field type of `google.protobuf.Any`.
    TypeAny any = 21;

    // duration declares the default value for field type of `google.protobuf.Duration`.
    google.protobuf.Duration duration = 22;

    // timestamp declares the default value for field type of `google.protobuf.Timestamp`.
    google.protobuf.Timestamp timestamp = 23;
  }
}

message TypeMessage {
  // Init indicates the `message` to empty value if it is nil pointer.
  // Only effective for language Go.
  optional bool init = 1;
}

message TypeAny {
  // The type_url are combines with the import path(excludes suffix .proto) of proto file and the message name.
  // And the entry format like `github.com/yu31/protoc-plugin-defaults/proto/defaults.MapOptions`.
  //
  // You should use the point number connection to the parent message for embedded message.
  // And the entry format like `github.com/yu31/protoc-plugin-defaults/proto/defaults.MapOptions.KV`.
  //
  // You can use `.` represents the import path if the message is location in the current proto file.
  // And the entry format like `.MapOptions.KV`.
  optional string type_url = 11;
}
